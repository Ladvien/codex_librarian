[tool:pytest]
# Pytest configuration for PDF to Markdown MCP Server
minversion = 6.0
addopts =
    -ra
    --strict-markers
    --strict-config
    --cov=src/pdf_to_markdown_mcp
    --cov-branch
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=85
    --tb=short
    -v

testpaths =
    tests

python_files =
    test_*.py
    *_test.py

python_classes =
    Test*

python_functions =
    test_*

markers =
    unit: Unit tests
    integration: Integration tests
    slow: Slow running tests (>1 second)
    database: Tests requiring database
    redis: Tests requiring Redis
    mineru: Tests requiring MinerU service
    embeddings: Tests requiring embedding service
    celery: Tests requiring Celery
    api: API endpoint tests
    models: Pydantic model tests
    core: Core functionality tests
    services: Service layer tests
    worker: Worker/task tests

filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

asyncio_mode = auto

# Test discovery
norecursedirs =
    .git
    .tox
    .env
    dist
    build
    docs
    *.egg
    __pycache__

# Coverage configuration
[coverage:run]
source = src/
branch = True
omit =
    */tests/*
    */test_*
    */__init__.py
    */migrations/*
    */venv/*
    */.venv/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml