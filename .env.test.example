# ==============================================================================
# TEST ENVIRONMENT CONFIGURATION
# ==============================================================================
# This file contains test-specific environment variables.
# Copy to .env.test and customize for your testing environment.

# ==============================================================================
# TEST DATABASE CONFIGURATION
# ==============================================================================
# Test PostgreSQL Database (mirrors production schema)
# Use a separate database/schema from production!
TEST_DB_HOST=localhost
TEST_DB_PORT=5432
TEST_DB_NAME=pdf_to_markdown_mcp_test
TEST_DB_USER=test_user
TEST_DB_PASSWORD=test_password

# Full test database URL (recommended for E2E tests)
TEST_DATABASE_URL=postgresql://test_user:test_password@localhost:5432/pdf_to_markdown_mcp_test

# SQLite fallback for CI/unit tests (faster setup)
TEST_DATABASE_URL_SQLITE=sqlite:///./test_pdf_mcp.db

# Async database URL for async tests
TEST_DATABASE_URL_ASYNC=postgresql+asyncpg://test_user:test_password@localhost:5432/pdf_to_markdown_mcp_test

# ==============================================================================
# TEST REDIS CONFIGURATION
# ==============================================================================
TEST_REDIS_HOST=localhost
TEST_REDIS_PORT=6379
TEST_REDIS_DB=1  # Use different DB from production
TEST_REDIS_PASSWORD=""

# Test Celery URLs
TEST_CELERY_BROKER_URL=redis://localhost:6379/1
TEST_CELERY_RESULT_BACKEND=redis://localhost:6379/1

# ==============================================================================
# TEST FILE SYSTEM PATHS
# ==============================================================================
# Test input directory (will be created in temp dirs)
TEST_INPUT_DIRECTORY=/tmp/test_pdf_input
TEST_OUTPUT_DIRECTORY=/tmp/test_pdf_output
TEST_TEMP_DIR=/tmp/test_pdf_temp

# Test watch directories
TEST_WATCH_DIRECTORIES='["/tmp/test_pdf_input"]'

# ==============================================================================
# TEST PROCESSING CONFIGURATION
# ==============================================================================
# Smaller limits for faster tests
TEST_MAX_FILE_SIZE_MB=50
TEST_PROCESSING_TIMEOUT_SECONDS=30

# Chunking settings for tests
TEST_CHUNK_SIZE=500
TEST_CHUNK_OVERLAP=50

# ==============================================================================
# TEST SERVICE CONFIGURATION
# ==============================================================================
# Enable mocking for external services in tests
TEST_MOCK_SERVICES=true
TEST_MOCK_MINERU=true
TEST_MOCK_EMBEDDINGS=true
TEST_MOCK_OLLAMA=true

# Test-specific URLs (if running real services for integration tests)
TEST_OLLAMA_URL=http://localhost:11434
TEST_API_KEY=test_api_key_12345

# ==============================================================================
# TEST LOGGING
# ==============================================================================
TEST_LOG_LEVEL=DEBUG
TEST_LOG_FORMAT="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
TEST_STRUCTURED_LOGGING=false

# ==============================================================================
# TEST PERFORMANCE SETTINGS
# ==============================================================================
# Smaller pools for test environment
TEST_DB_POOL_SIZE=5
TEST_DB_MAX_OVERFLOW=2
TEST_CONNECTION_POOL_SIZE=5

# Faster timeouts for tests
TEST_DB_POOL_TIMEOUT=5
TEST_DB_CONNECT_TIMEOUT=5
TEST_DB_MAX_RETRIES=2

# ==============================================================================
# TEST SECURITY SETTINGS
# ==============================================================================
TEST_STRICT_VALIDATION=false
TEST_ENABLE_SECURITY_HEADERS=false
TEST_SCAN_UPLOADED_FILES=false

# ==============================================================================
# TEST ENVIRONMENT MARKERS
# ==============================================================================
ENVIRONMENT=testing
TEST_ENVIRONMENT=true
DEBUG=true

# ==============================================================================
# NOTES FOR SETTING UP TEST DATABASE
# ==============================================================================
# 1. Create test database:
#    createdb pdf_to_markdown_mcp_test
#
# 2. Create test user:
#    CREATE USER test_user WITH PASSWORD 'test_password';
#    GRANT ALL PRIVILEGES ON DATABASE pdf_to_markdown_mcp_test TO test_user;
#
# 3. Enable pgvector extension:
#    \c pdf_to_markdown_mcp_test;
#    CREATE EXTENSION IF NOT EXISTS vector;
#
# 4. Grant permissions:
#    GRANT ALL ON SCHEMA public TO test_user;
#    GRANT ALL ON ALL TABLES IN SCHEMA public TO test_user;
#    GRANT ALL ON ALL SEQUENCES IN SCHEMA public TO test_user;
#
# 5. For automated test runs, consider:
#    ALTER USER test_user CREATEDB; -- Allows creating test databases dynamically